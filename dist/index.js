'use strict';var _slicedToArray = function () {function sliceIterator(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"]) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}return function (arr, i) {if (Array.isArray(arr)) {return arr;} else if (Symbol.iterator in Object(arr)) {return sliceIterator(arr, i);} else {throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _treeUnfolder = require('./001-treeUnfolder');var _treeUnfolder2 = _interopRequireDefault(_treeUnfolder);
var _treeMapper = require('./004-treeMapper');var _treeMapper2 = _interopRequireDefault(_treeMapper);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var tree = ['a', [['b', [['e'], ['f']]], ['c'], ['d', [['g'], ['j']]]]];
var functionForMap = function functionForMap(_ref) {var _ref2 = _slicedToArray(_ref, 1),name = _ref2[0];return [name.toUpperCase()];};
console.log((0, _treeUnfolder2.default)((0, _treeMapper2.default)(functionForMap, tree)));
//# sourceMappingURL=index.js.map